<?php
/**
 * Class to handle all transaction related to transaction.
 *
 * @author  Rendy
 * @package Wacara
 */

namespace Skeleton;

use WP_Error;

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

if ( ! class_exists( 'Skeleton\Transaction' ) ) {
	/**
	 * Class Transaction
	 *
	 * @package Skeleton
	 */
	class Transaction {

		/**
		 * Create customer.
		 *
		 * @param string $name             customer name.
		 * @param string $email            customer email address.
		 * @param string $stripe_source_id srtipe source id which generated by stripe.
		 *
		 * @return Result
		 */
		public static function save_customer( $name, $email, $stripe_source_id ) {
			$result = new Result();

			/**
			 * Perform action before creating stripe customer.
			 *
			 * @param string $name             customer name.
			 * @param string $email            customer email.
			 * @param string $stripe_source_id customer source id based on credit card information.
			 */
			do_action( 'wacara_before_creating_stripe_customer', $name, $email, $stripe_source_id );

			// Create strip customer.
			$save_stripe_customer = Payment::create_customer( $name, $email, $stripe_source_id );

			/**
			 * Perform action after creating stripe customer.
			 *
			 * @param string $name                 customer name.
			 * @param string $email                customer email.
			 * @param string $stripe_source_id     customer source id based on credit card information.
			 * @param Result $save_stripe_customer object class result after creating stripe customer.
			 */
			do_action( 'wacara_after_creating_stripe_customer', $name, $email, $stripe_source_id, $save_stripe_customer );

			// Validate stripe customer status.
			if ( $save_stripe_customer->success ) {

				/**
				 * Perform action before creating local customer based on stripe customer.
				 *
				 * @param string $name                 customer name.
				 * @param string $email                customer email.
				 * @param Result $save_stripe_customer object class result after creating stripe customer.
				 */
				do_action( 'wacara_before_creating_local_customer', $name, $email, $save_stripe_customer );

				// Save local customer based on stripe customer.
				$save_local_customer = wp_insert_post(
					[
						'post_type'   => 'customer',
						'post_status' => 'publish',
						'post_title'  => $name,
						'post_name'   => sanitize_title( $name ),
					]
				);

				/**
				 * Perform action after creating local customer.
				 *
				 * @param string       $name                customer name.
				 * @param string       $email               customer email.
				 * @param int|WP_Error $save_local_customer object class result after creating stripe customer.
				 */
				do_action( 'wacara_after_creating_local_customer', $name, $email, $save_local_customer );

				if ( ! is_wp_error( $save_local_customer ) ) {

					// Save all information into post meta.
					Helper::save_post_meta(
						$save_local_customer,
						[
							'email'              => $email,
							'stripe_source_id'   => $stripe_source_id,
							'stripe_customer_id' => $save_stripe_customer->callback,
						]
					);

					// Return the result.
					$result->success  = true;
					$result->callback = $save_stripe_customer->callback;
				} else {
					$result->message = $save_local_customer->get_error_message();
				}
			} else {
				$result->message = $save_stripe_customer->message;
			}

			return $result;
		}

		/**
		 * Find local customer id by email.
		 *
		 * @param string $email customer email.
		 *
		 * @return Result
		 */
		public static function find_local_customer_id_by_email( $email ) {
			return Helper::get_post_id_bt_meta_key( 'email', $email, 'customer' );
		}

		/**
		 * Find stripe customer id by email.
		 *
		 * @param string $email customer email.
		 *
		 * @return Result
		 */
		public static function find_stripe_customer_id_by_email( $email ) {
			$result = new Result();

			// Find local customer.
			$find_local_customer = self::find_local_customer_id_by_email( $email );

			// Validate local customer status.
			if ( $find_local_customer->success ) {

				// Save found local customer_id into variable.
				$local_customer_id = $find_local_customer->callback;

				// Get stripe id from local customer.
				$stripe_customer_id = Helper::get_post_meta( 'stripe_customer_id', $local_customer_id );

				/**
				 * Perform filter to modify stripe customer id..
				 *
				 * @param string $stripe_customer_id found stripe customer id.
				 * @param string $local_customer_id  local customer id.
				 */
				$stripe_customer_id = apply_filters( 'wacara_filter_stripe_customer_id', $stripe_customer_id, $local_customer_id );

				// Update result.
				$result->success  = true;
				$result->callback = $stripe_customer_id;
			} else {

				// Update result.
				$result->message = $find_local_customer->message;
			}

			return $result;
		}
	}
}
